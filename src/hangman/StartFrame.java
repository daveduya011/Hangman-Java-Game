/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hangman;

import java.awt.event.ComponentAdapter;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionAdapter;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Dewberry
 */
public class StartFrame extends javax.swing.JFrame {
    
    ImageIcon icon_shutdown, icon_shutdown_h;
    AnswerSheet answerSheet;  
    
    private ArrayList<JLabel> textEntered;
    private ArrayList<JLabel> generatedLetters;
    
    private String pickedAnswer;
    private String pickedQuestion;
    private String pickedCategory;
    private int currentLives;
    private int playerAnswers;
    private int score;
    public static int highscore;
    private final int LIVES = 5;
    
    private ArrayList<MouseListener> savedListener;
    private ArrayList<String> bgmhurt;
    private BackgroundMusic fx_gameOver;
    private BackgroundMusic bgMusic;
    private BackgroundMusic fx_correct;
    private BackgroundMusic fx_cheers;
    
    private int totalNumberOfSearch;
    private int dragXPos, dragYPos;
    
    ImageIcon sprite1, sprite2, sprite3, sprite4, sprite5, sprite6;
    
    /**
     * Creates new form StartFrame
     */
    public StartFrame() {
        dragXPos = -1;
        dragYPos = -1;
        answerSheet = new AnswerSheet();
        currentLives = LIVES; 
        playerAnswers = 0;
        
        initComponents();
        
        //adds the audio hurt
        bgmhurt = new ArrayList();
        bgmhurt.add("hurt1.wav");
        bgmhurt.add("hurt2.wav");
        bgmhurt.add("hurt3.wav");
        bgmhurt.add("hurt4.wav");
        bgmhurt.add("hurt5.wav");
        
        bgMusic = new BackgroundMusic("track3.wav");
        bgMusic.play();
        
        loadGame();
        loadQuestions();
        loadAnswers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_exit = new javax.swing.JLabel();
        dragPanel = new javax.swing.JPanel();
        lblLives = new javax.swing.JLabel();
        lblScore = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtQuestion = new javax.swing.JTextArea();
        lblCategory = new javax.swing.JLabel();
        answerBoxContainer = new javax.swing.JPanel();
        key1 = new javax.swing.JLabel();
        key2 = new javax.swing.JLabel();
        key3 = new javax.swing.JLabel();
        key4 = new javax.swing.JLabel();
        key5 = new javax.swing.JLabel();
        key6 = new javax.swing.JLabel();
        key7 = new javax.swing.JLabel();
        key8 = new javax.swing.JLabel();
        key9 = new javax.swing.JLabel();
        key10 = new javax.swing.JLabel();
        key12 = new javax.swing.JLabel();
        key13 = new javax.swing.JLabel();
        key14 = new javax.swing.JLabel();
        key15 = new javax.swing.JLabel();
        key16 = new javax.swing.JLabel();
        key17 = new javax.swing.JLabel();
        key18 = new javax.swing.JLabel();
        key19 = new javax.swing.JLabel();
        key20 = new javax.swing.JLabel();
        key21 = new javax.swing.JLabel();
        key22 = new javax.swing.JLabel();
        key23 = new javax.swing.JLabel();
        key24 = new javax.swing.JLabel();
        key25 = new javax.swing.JLabel();
        key26 = new javax.swing.JLabel();
        key27 = new javax.swing.JLabel();
        imageSprite = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        question_bg = new javax.swing.JLabel();
        startGame_bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1025, 576));
        setMinimumSize(new java.awt.Dimension(1025, 576));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1025, 576));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_exit.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 36)); // NOI18N
        btn_exit.setForeground(new java.awt.Color(204, 0, 0));
        btn_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_shutdown_2.png"))); // NOI18N
        btn_exit.setText("Exit");
        btn_exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(btn_exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        dragPanel.setOpaque(false);

        javax.swing.GroupLayout dragPanelLayout = new javax.swing.GroupLayout(dragPanel);
        dragPanel.setLayout(dragPanelLayout);
        dragPanelLayout.setHorizontalGroup(
            dragPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 920, Short.MAX_VALUE)
        );
        dragPanelLayout.setVerticalGroup(
            dragPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        getContentPane().add(dragPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 50));

        lblLives.setFont(new java.awt.Font("Tw Cen MT", 0, 48)); // NOI18N
        lblLives.setForeground(new java.awt.Color(51, 51, 51));
        lblLives.setText("xxxxx");
        getContentPane().add(lblLives, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 70, 170, -1));

        lblScore.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        lblScore.setForeground(new java.awt.Color(51, 51, 51));
        lblScore.setText("Total Answered: 0");
        getContentPane().add(lblScore, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 90, 170, -1));

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setOpaque(false);
        jScrollPane1.setWheelScrollingEnabled(false);

        txtQuestion.setEditable(false);
        txtQuestion.setBackground(new java.awt.Color(68, 66, 64));
        txtQuestion.setColumns(20);
        txtQuestion.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 36)); // NOI18N
        txtQuestion.setForeground(new java.awt.Color(255, 255, 255));
        txtQuestion.setLineWrap(true);
        txtQuestion.setRows(5);
        txtQuestion.setText("Question\n");
        txtQuestion.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtQuestion);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 170, 450, 180));

        lblCategory.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 24)); // NOI18N
        lblCategory.setForeground(new java.awt.Color(255, 255, 255));
        lblCategory.setText("Category:");
        getContentPane().add(lblCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 140, -1, -1));

        answerBoxContainer.setOpaque(false);
        getContentPane().add(answerBoxContainer, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 370, 690, 60));

        key1.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key1.setForeground(new java.awt.Color(255, 255, 255));
        key1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key1.setText("A");
        key1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 440, 50, 50));

        key2.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key2.setForeground(new java.awt.Color(255, 255, 255));
        key2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key2.setText("B");
        key2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 440, 50, 50));

        key3.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key3.setForeground(new java.awt.Color(255, 255, 255));
        key3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key3.setText("C");
        key3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 440, 50, 50));

        key4.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key4.setForeground(new java.awt.Color(255, 255, 255));
        key4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key4.setText("D");
        key4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key4, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 440, 50, 50));

        key5.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key5.setForeground(new java.awt.Color(255, 255, 255));
        key5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key5.setText("E");
        key5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key5, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 440, 50, 50));

        key6.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key6.setForeground(new java.awt.Color(255, 255, 255));
        key6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key6.setText("F");
        key6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key6, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 440, 50, 50));

        key7.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key7.setForeground(new java.awt.Color(255, 255, 255));
        key7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key7.setText("G");
        key7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key7, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 440, 50, 50));

        key8.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key8.setForeground(new java.awt.Color(255, 255, 255));
        key8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key8.setText("H");
        key8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key8, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 440, 50, 50));

        key9.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key9.setForeground(new java.awt.Color(255, 255, 255));
        key9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key9.setText("I");
        key9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key9, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 440, 50, 50));

        key10.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key10.setForeground(new java.awt.Color(255, 255, 255));
        key10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key10.setText("J");
        key10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key10, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 440, 50, 50));

        key12.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key12.setForeground(new java.awt.Color(255, 255, 255));
        key12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key12.setText("K");
        key12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key12, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 440, 50, 50));

        key13.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key13.setForeground(new java.awt.Color(255, 255, 255));
        key13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key13.setText("L");
        key13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key13, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 440, 50, 50));

        key14.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key14.setForeground(new java.awt.Color(255, 255, 255));
        key14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key14.setText("M");
        key14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key14, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 440, 50, 50));

        key15.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key15.setForeground(new java.awt.Color(255, 255, 255));
        key15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key15.setText("N");
        key15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key15, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 490, 50, 50));

        key16.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key16.setForeground(new java.awt.Color(255, 255, 255));
        key16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key16.setText("O");
        key16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key16, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 490, 50, 50));

        key17.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key17.setForeground(new java.awt.Color(255, 255, 255));
        key17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key17.setText("P");
        key17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key17, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 490, 50, 50));

        key18.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key18.setForeground(new java.awt.Color(255, 255, 255));
        key18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key18.setText("Q");
        key18.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key18, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 490, 50, 50));

        key19.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key19.setForeground(new java.awt.Color(255, 255, 255));
        key19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key19.setText("R");
        key19.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key19, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 490, 50, 50));

        key20.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key20.setForeground(new java.awt.Color(255, 255, 255));
        key20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key20.setText("S");
        key20.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key20, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 490, 50, 50));

        key21.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key21.setForeground(new java.awt.Color(255, 255, 255));
        key21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key21.setText("T");
        key21.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key21, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 490, 50, 50));

        key22.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key22.setForeground(new java.awt.Color(255, 255, 255));
        key22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key22.setText("U");
        key22.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key22, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 490, 50, 50));

        key23.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key23.setForeground(new java.awt.Color(255, 255, 255));
        key23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key23.setText("V");
        key23.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key23, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 490, 50, 50));

        key24.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key24.setForeground(new java.awt.Color(255, 255, 255));
        key24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key24.setText("W");
        key24.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key24, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 490, 50, 50));

        key25.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key25.setForeground(new java.awt.Color(255, 255, 255));
        key25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key25.setText("X");
        key25.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key25, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 490, 50, 50));

        key26.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key26.setForeground(new java.awt.Color(255, 255, 255));
        key26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key26.setText("Y");
        key26.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key26, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 490, 50, 50));

        key27.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        key27.setForeground(new java.awt.Color(255, 255, 255));
        key27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        key27.setText("Z");
        key27.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(key27, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 490, 50, 50));

        imageSprite.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/sprite1_2.png"))); // NOI18N
        getContentPane().add(imageSprite, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 0, -1, -1));

        jLabel2.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 440, -1, -1));

        jLabel3.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 440, -1, -1));

        jLabel4.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 440, -1, -1));

        jLabel5.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 440, -1, -1));

        jLabel6.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 440, -1, -1));

        jLabel7.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 440, -1, -1));

        jLabel8.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 440, -1, -1));

        jLabel9.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 440, -1, -1));

        jLabel10.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 440, -1, -1));

        jLabel11.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 440, -1, -1));

        jLabel12.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 440, -1, -1));

        jLabel13.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 440, -1, -1));

        jLabel14.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 490, -1, -1));

        jLabel15.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 490, -1, -1));

        jLabel16.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 490, -1, -1));

        jLabel17.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 490, -1, -1));

        jLabel18.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 490, -1, -1));

        jLabel19.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 490, -1, -1));

        jLabel20.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 490, -1, -1));

        jLabel21.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 490, -1, -1));

        jLabel22.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 490, -1, -1));

        jLabel23.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 490, -1, -1));

        jLabel24.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 490, -1, -1));

        jLabel25.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 440, -1, -1));

        jLabel26.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 490, -1, -1));

        jLabel27.setFont(new java.awt.Font("Source Sans Pro Black", 0, 24)); // NOI18N
        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_keyBg.png"))); // NOI18N
        getContentPane().add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 490, -1, -1));

        question_bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_textContainer_2.png"))); // NOI18N
        getContentPane().add(question_bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 100, 630, 280));

        startGame_bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/startgame_bg3_2.png"))); // NOI18N
        getContentPane().add(startGame_bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 576));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StartFrame().setVisible(true);
            }
        });
    }
    // <editor-fold defaultstate="collapsed" desc="GENERATED VARIABLES">    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel answerBoxContainer;
    private javax.swing.JLabel btn_exit;
    private javax.swing.JPanel dragPanel;
    private javax.swing.JLabel imageSprite;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel key1;
    private javax.swing.JLabel key10;
    private javax.swing.JLabel key12;
    private javax.swing.JLabel key13;
    private javax.swing.JLabel key14;
    private javax.swing.JLabel key15;
    private javax.swing.JLabel key16;
    private javax.swing.JLabel key17;
    private javax.swing.JLabel key18;
    private javax.swing.JLabel key19;
    private javax.swing.JLabel key2;
    private javax.swing.JLabel key20;
    private javax.swing.JLabel key21;
    private javax.swing.JLabel key22;
    private javax.swing.JLabel key23;
    private javax.swing.JLabel key24;
    private javax.swing.JLabel key25;
    private javax.swing.JLabel key26;
    private javax.swing.JLabel key27;
    private javax.swing.JLabel key3;
    private javax.swing.JLabel key4;
    private javax.swing.JLabel key5;
    private javax.swing.JLabel key6;
    private javax.swing.JLabel key7;
    private javax.swing.JLabel key8;
    private javax.swing.JLabel key9;
    private javax.swing.JLabel lblCategory;
    private javax.swing.JLabel lblLives;
    private javax.swing.JLabel lblScore;
    private javax.swing.JLabel question_bg;
    private javax.swing.JLabel startGame_bg;
    private javax.swing.JTextArea txtQuestion;
    // End of variables declaration//GEN-END:variables
    // </editor-fold> 
    
    private void loadGame() {
        loadImages();
        
        btn_exit.addMouseListener(new MouseAdapter(){
            public void mouseEntered(MouseEvent e) {
                btn_exit.setIcon(icon_shutdown_h);
            }
            public void mouseExited(MouseEvent e) {
                btn_exit.setIcon(icon_shutdown);
            }
            public void mouseReleased(MouseEvent e) {
                System.exit(0);
            }});
        
        //---DRAG PANEL---
        dragPanel.addMouseMotionListener(new MouseMotionAdapter(){
            public void mouseDragged(MouseEvent e) {
                if (dragXPos == -1) {
                    dragXPos = e.getX();
                }
                if (dragYPos == -1) {
                    dragYPos = e.getY();
                }
                setLocation(e.getXOnScreen() - dragXPos, e.getYOnScreen() - dragYPos);
            }});
        
        dragPanel.addMouseListener(new MouseAdapter(){
            //Clears the mouse drag position
            public void mouseReleased(MouseEvent e) {
                dragXPos = -1;
                dragYPos = -1;
            }
        });
       
        // <editor-fold defaultstate="collapsed" desc="ALPHABET LISTENERS">    
        key1.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key1);
        }});
        
        key2.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key2);
        }});
        
        key3.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key3);
        }});
        
        key4.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key4);
        }});
        
        key5.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key5);
        }});
        
        key6.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key6);
        }});
        
        key7.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key7);
        }});
        
        key8.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key8);
        }});
        
        key9.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key9);
        }});
        
        key10.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key10);
        }});
        
        key12.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key12);
        }});
        
        key13.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key13);
        }});
        
        key14.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key14);
        }});
        
        key15.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key15);
        }});
        
        key16.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key16);
        }});
        
        key17.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key17);
        }});
        
        key18.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key18);
        }});
        
        key19.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key19);
        }});
        
        key20.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key20);
        }});
        
        
        key21.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key21);
        }});
        
        
        key22.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key22);
        }});
        
        
        key23.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key23);
        }});
        
        
        key24.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key24);
        }});
        
        
        key25.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key25);
        }});
        
        
        key26.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key26);
        }});
        
        key27.addMouseListener(new MouseAdapter(){
            
            public void mouseReleased(MouseEvent e) {
                checkLetters(key27);
        }});
        // </editor-fold>    
    }

    //loads all images
    private void loadImages() {
        sprite1 = loadImage("sprite", "1", "_2");
        sprite2 = loadImage("sprite", "2", "_2");
        sprite3 = loadImage("sprite", "3", "_2");
        sprite4 = loadImage("sprite", "4", "_2");
        sprite5 = loadImage("sprite", "5", "_2");
        sprite6 = loadImage("sprite", "6", "_2");
        
        icon_shutdown = loadImage("icon_shutdown", "", "_2");
        icon_shutdown_h = loadImage("icon_shutdown", "_h", "_2");
    }
    
    private ImageIcon loadImage(String imageName, String type, String size){
        ImageIcon image = new ImageIcon(getClass().getResource("/images/" + imageName + type + size + ".png"));
        return image;
    }
    //------------------end of game loader-------------//

    private void loadQuestions() {
        
    }

    private void loadAnswers() {
        
        
        
        
        pickQuestion();
    }

    private void visualizeAnswerBoxes(String pickAnswer) {
        
        
        textEntered = new ArrayList();
        savedListener = new ArrayList();
        pickedAnswer = pickAnswer;
        generatedLetters = new ArrayList();
        
        for (int i = 0; i < pickedAnswer.length(); i++){
            //sets the character to t
            String t;
            t = String.valueOf(pickedAnswer.charAt(i));
            
            JLabel text = new JLabel();
            JPanel box = new JPanel();
                
            box.setBackground(new java.awt.Color(0, 0, 0));
            box.setForeground(new java.awt.Color(255, 255, 55));
            box.setMinimumSize(new java.awt.Dimension(30, 30));
            box.setPreferredSize(new java.awt.Dimension(30, 30));
            box.setMaximumSize(new java.awt.Dimension(30, 30));
            
            text.setFont(new java.awt.Font("Rockwell", 0, 20)); // NOI18N
            text.setForeground(new java.awt.Color(255, 255, 255));
            text.setText(t.toUpperCase());
            text.setVisible(false);
            
            //everytime there is whitespace
            if (pickedAnswer.charAt(i) == ' '){
                box.setOpaque(false);
                
                //adds additional value to playeranswers
                playerAnswers += 1;
            }
            
            box.add(text);
            answerBoxContainer.add(box);
            generatedLetters.add(text);
            
        }
    }
    private void visualizeQuestion(String pickQuestion){
        lblCategory.setText(pickedCategory);
        txtQuestion.setText(pickQuestion);
    }
    
    private void pickQuestion(){
        
        //generates a random question
        double rCategory = Math.random() * (answerSheet.categories.size() - 1);
        int randCategory = (int) Math.round(rCategory);
        
        double rQuestion = Math.random() * (answerSheet.categories.get(randCategory).size()/3 - 1);
        int randQuestion = (int) Math.round(rQuestion)*3;
       
        //gets the question and answer and category
        pickedAnswer = answerSheet.categories.get(randCategory).get(randQuestion+1).toString();
        pickedQuestion = answerSheet.categories.get(randCategory).get(randQuestion).toString();
        pickedCategory = answerSheet.categories.get(randCategory).get(randQuestion+2).toString();
        
        //visualizes the boxes
        visualizeAnswerBoxes(pickedAnswer);
        visualizeQuestion(pickedQuestion);
    }
    
    private void checkLetters(JLabel x){
        //saves the listener
        
        x.setForeground(new java.awt.Color(50, 50, 50));
        x.setCursor(new java.awt.Cursor(DEFAULT_CURSOR));
        savedListener.add(x.getMouseListeners()[0]);
        
        x.removeMouseListener(x.getMouseListeners()[0]);
        textEntered.add(x);
        
        
        totalNumberOfSearch = 0;
        for (int i = 0; i < pickedAnswer.length(); i++){
            if (x.getText().equalsIgnoreCase(String.valueOf(pickedAnswer.charAt(i)))){
                generatedLetters.get(i).setVisible(true);
                totalNumberOfSearch += 1;
                //saves how many matched letters
                playerAnswers += 1;
            }
        }
        
        //if there is no letters matched
        if (totalNumberOfSearch == 0){
            currentLives -= 1;
            System.out.println(currentLives);
            
            
            switch (currentLives){
                case 5: imageSprite.setIcon(sprite1); lblLives.setText("xxxxx");new BackgroundMusic(bgmhurt.get(0)).play();break;
                case 4: imageSprite.setIcon(sprite2); lblLives.setText("xxxx");new BackgroundMusic(bgmhurt.get(1)).play();break;
                case 3: imageSprite.setIcon(sprite3); lblLives.setText("xxx");new BackgroundMusic(bgmhurt.get(2)).play();break;
                case 2: imageSprite.setIcon(sprite4); lblLives.setText("xx");new BackgroundMusic(bgmhurt.get(3)).play();break;
                case 1: imageSprite.setIcon(sprite5); lblLives.setText("x");new BackgroundMusic(bgmhurt.get(4)).play();break;
                case 0: imageSprite.setIcon(sprite6); lblLives.setText("");new BackgroundMusic(bgmhurt.get(3)).play();
                gameOver();break;
            }
        } else { 
            fx_correct = new BackgroundMusic("correct.wav");
            fx_correct.play();
        }
        
        //If player won or fills all the blanks
        if (pickedAnswer.length() == playerAnswers){
            win();
        }
        
        //updates the score
        lblScore.setText("Total Answered: " + score);
        
    }
    
    private void gameOver(){
        bgMusic.stop();
        fx_gameOver = new BackgroundMusic("trackGameOver.wav");
        fx_gameOver.play();
        JOptionPane.showMessageDialog(null, "Sorry, the correct answer is " + pickedAnswer, "Game Over!", JOptionPane.WARNING_MESSAGE);
        fx_gameOver.stop();
        this.dispose();
        JFrame.getFrames()[0].setVisible(true);
        resetGame("lose");
    }
    
    private void resetGame(String result){
        
        if (score > highscore){
            highscore = score;
        }
        
        //if win or lose
        switch(result){
            case "win": currentLives = LIVES; imageSprite.setIcon(sprite1);lblLives.setText("xxxxx"); break;
            case "lose": currentLives = LIVES; imageSprite.setIcon(sprite1);lblLives.setText("xxxxx"); score = 0; break;
        }
        
        //removes all the text in the answer box
        answerBoxContainer.removeAll();
        answerBoxContainer.revalidate();
        answerBoxContainer.repaint();
        
        //resets keyboard buttons
        for (int i = 0; i < textEntered.size(); i++){
            textEntered.get(i).setForeground(new java.awt.Color(250, 250, 250));
            textEntered.get(i).setCursor(new java.awt.Cursor(HAND_CURSOR));
            textEntered.get(i).addMouseListener(savedListener.get(i));
        }
        
        playerAnswers = 0;
        
        //resets the bgMusic
        
        bgMusic = new BackgroundMusic("track3.wav");
        bgMusic.play();
        
        //picks a new random question
        pickQuestion();
        
    }

    private void win() {
        score++;
        bgMusic.stop();
        fx_cheers = new BackgroundMusic("cheers.wav");
        fx_cheers.play();
        JOptionPane.setRootFrame(this);
        JOptionPane.showMessageDialog(null, "You got the correct answer " + pickedAnswer, "Congratulations! ", JOptionPane.PLAIN_MESSAGE);
        resetGame("win");
        fx_cheers.stop();
    }

}
